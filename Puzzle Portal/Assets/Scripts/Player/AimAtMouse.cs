using System.Collections; using System.Collections.Generic; using UnityEngine;  public class AimAtMouse : MonoBehaviour {     public GameObject BlueOriginal;     public GameObject OrangeOriginal;        Vector3 MousePositionRead;        Vector3 PlayerPosition;     Vector3 Rotation;     float angle;     int PrimaryMouseButton;     int SecondaryMouseButton;      float timerBlue;     float timerOrange;      public static bool BlueFired = false;     public static bool OrangeFired = false;      // Use this for initialization     void Start()     {     }      // Update is called once per frame     void Update()     {         MousePositionRead = Input.mousePosition;         MousePositionRead.z = 5.23f; //The distance between the camera and object         PlayerPosition = Camera.main.WorldToScreenPoint(transform.position);         MousePositionRead.x = MousePositionRead.x - PlayerPosition.x;         MousePositionRead.y = MousePositionRead.y - PlayerPosition.y;         angle = Mathf.Atan2(MousePositionRead.y, MousePositionRead.x) * Mathf.Rad2Deg;         Rotation.z = angle;         transform.rotation = Quaternion.Euler(Rotation);          bool ShotFiredBlue = Input.GetMouseButtonDown(0);         bool ShotFiredOrange = Input.GetMouseButtonDown(1);          float Lifespan = 5;         float force = 500;         if (ShotFiredBlue && (!BlueFired || timerBlue > Lifespan))         {             BlueFired = true;             GameObject BlueShot = Instantiate(BlueOriginal);             BlueShot.GetComponent<Rigidbody2D>().transform.position = transform.position;             BlueShot.GetComponent<Rigidbody2D>().velocity = Vector3.zero;              FireObject(BlueShot, force);              //Vector2 Pointer;             //Pointer.x = -MousePositionRead.y;             //Pointer.y = MousePositionRead.x;              //BlueShot.transform.right = Pointer;             //BlueShot.GetComponent<Rigidbody2D>().AddForce(MousePositionRead.normalized * force);             timerBlue = 0;         }          if (ShotFiredOrange && (!OrangeFired || timerOrange > Lifespan))         {             OrangeFired = true;             GameObject OrangeShot = Instantiate(OrangeOriginal);             OrangeShot.GetComponent<Rigidbody2D>().transform.position = transform.position;             OrangeShot.GetComponent<Rigidbody2D>().velocity = Vector3.zero;              FireObject(OrangeShot, force);                          //Vector2 Pointer;             //Pointer.x = -MousePositionRead.y;             //Pointer.y = MousePositionRead.x;              //OrangeShot.transform.right = Pointer;             //OrangeShot.GetComponent<Rigidbody2D>().AddForce(MousePositionRead.normalized * force);             timerOrange = 0;         }          timerBlue += Time.deltaTime;         timerOrange += Time.deltaTime;      }          public void FireObject(GameObject Object, float force)     {         Vector2 Pointer;         Pointer.x = -MousePositionRead.y;         Pointer.y = MousePositionRead.x;          Object.transform.right = Pointer;         Object.GetComponent<Rigidbody2D>().AddForce(MousePositionRead.normalized * force);     }      public static void ResetShot(bool BlueHit, bool OrangeHit)     {         if (BlueHit)         {             BlueFired = false;         }          if (OrangeHit)         {             OrangeFired = false;         }     }  } 